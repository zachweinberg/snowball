openapi: '3.0.0'
info:
  version: 1.0.0
  title: Wealth API
servers:
  - url: /api
paths:
  /users:
    post:
      summary: Create a user
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                confirmPassword:
                  type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /users/contact:
    post:
      summary: Create a user
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - name
                - message
              properties:
                name:
                  type: string
                email:
                  type: string
                message:
                  type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /users/check:
    post:
      summary: Verify an email exists in database
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - email
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /users/check-verification-token:
    post:
      summary: Check verification token matches and verify account
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - token
                - userID
              properties:
                token:
                  type: string
                userID:
                  type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /users/resend-email:
    post:
      summary: Resend email verification

      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /users/me:
    get:
      summary: Get me
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /portfolios:
    get:
      summary: Fetch all users portfolios
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
    post:
      summary: Create a new portfolio
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - public
                - name
              properties:
                name:
                  type: string
                public:
                  type: boolean
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /portfolios/{portfolioID}:
    get:
      summary: Fetch a portfolio
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
    delete:
      summary: Delete a portfolio and subcollections
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /portfolios/{portfolioID}/settings:
    get:
      summary: Fetch a portfolio's settings
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
    put:
      summary: Edit portfolios settings
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - private
                - defaultAssetType
                - reminderEmailPeriod
                - summaryEmailPeriod
              properties:
                private:
                  type: boolean
                reminderEmailPeriod:
                  type: string
                summaryEmailPeriod:
                  type: string
                defaultAssetType:
                  type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /portfolios/{portfolioID}/stocks:
    get:
      summary: Fetch a portfolio's stocks
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /portfolios/{portfolioID}/crypto:
    get:
      summary: Fetch a portfolio's crypto
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /portfolios/{portfolioID}/real-estate:
    get:
      summary: Fetch a portfolio's real estate
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /portfolios/{portfolioID}/customs:
    get:
      summary: Fetch a portfolio's custom assets
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /portfolios/{portfolioID}/cash:
    get:
      summary: Fetch a portfolio's cash
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /positions/stock:
    post:
      summary: Add a stock to a portfolio
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - portfolioID
                - symbol
                - companyName
                - quantity
                - costPerShare
              properties:
                portfolioID:
                  type: string
                symbol:
                  type: string
                companyName:
                  type: string
                quantity:
                  type: number
                costPerShare:
                  type: number
                note:
                  type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /positions/crypto:
    post:
      summary: Add crypto to a portfolio
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - portfolioID
                - symbol
                - coinName
                - quantity
                - costPerCoin
              properties:
                portfolioID:
                  type: string
                symbol:
                  type: string
                coinName:
                  type: string
                quantity:
                  type: number
                costPerCoin:
                  type: number
                note:
                  type: string
                logoURL:
                  type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /positions/real-estate:
    post:
      summary: Add real estate to a portfolio
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - portfolioID
                - propertyValue
                - propertyType
                - thirdPartyData
              properties:
                portfolioID:
                  type: string
                thirdPartyData:
                  type: boolean
                propertyValue:
                  type: number
                propertyType:
                  type: string
                address:
                  type: string
                note:
                  type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /positions/cash:
    post:
      summary: Add cash estate to a portfolio
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - portfolioID
                - accountName
                - amount
              properties:
                portfolioID:
                  type: string
                accountName:
                  type: string
                amount:
                  type: number
                note:
                  type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /positions/custom:
    post:
      summary: Add custom asset to a portfolio
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - portfolioID
                - value
                - assetName
              properties:
                portfolioID:
                  type: string
                assetName:
                  type: string
                value:
                  type: number
                note:
                  type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /positions/{positionID}:
    delete:
      summary: Delete position from portfolio
      parameters:
        - name: portfolioID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /quotes:
    get:
      summary: Get stock or crypto quote
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
        - name: type
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /news:
    get:
      summary: Get news
      parameters:
        - name: symbol
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /watchlist:
    get:
      summary: Get users watchlist
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
    post:
      summary: Add item to watchlist
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - symbol
                - fullName
                - assetType
              properties:
                symbol:
                  type: string
                assetType:
                  type: string
                fullName:
                  type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
    delete:
      summary: Delete watchlist item from watchlist
      parameters:
        - name: itemID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /alerts:
    get:
      summary: Get users alerts
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
    post:
      summary: Add alerts
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - assetType
                - condition
                - price
                - symbol
                - destination
                - destinationValue
              properties:
                assetType:
                  type: string
                condition:
                  type: string
                price:
                  type: number
                symbol:
                  type: string
                destination:
                  type: string
                destinationValue:
                  type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
    delete:
      summary: Delete alert
      parameters:
        - name: alertID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
