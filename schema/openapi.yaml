openapi: '3.0.0'
info:
  version: 1.0.0
  title: Wealth API
servers:
  - url: /api
paths:
  /users:
    post:
      summary: Create a user
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - name
                - email
                - investingExperienceLevel
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                investingExperienceLevel:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /users/verify:
    post:
      summary: Verify an email exists in database
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - email
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /portfolios:
    get:
      summary: Fetch all users portfolios
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
    post:
      summary: Create a new portfolio
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - public
                - name
              properties:
                name:
                  type: string
                public:
                  type: boolean
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /portfolios/{portfolioID}:
    get:
      summary: Fetch a portfolio
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
  /positions/stock:
    post:
      summary: Add a stock to a portfolio
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - portfolioID
                - symbol
                - companyName
                - quantity
                - costBasis
              properties:
                portfolioID:
                  type: string
                symbol:
                  type: string
                companyName:
                  type: string
                quantity:
                  type: number
                costBasis:
                  type: number
                note:
                  type: string
      responses:
        '200':
          description: Valid request
          content:
            application/json:
              schema:
                type: object
